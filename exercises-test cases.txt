//Problem 1 - Test Cases

System.debug('\tProblem 1 - \t\tAnswer: ' + ApexP0Exercises.nFibonacci(0) + '\t\t\t\t\t\t\t\t\t\t - Expected: 0' );
System.debug('\tProblem 1 - \t\tAnswer: ' + ApexP0Exercises.nFibonacci(1) + '\t\t\t\t\t\t\t\t\t\t - Expected: 1' );
System.debug('\tProblem 1 - \t\tAnswer: ' + ApexP0Exercises.nFibonacci(2) + '\t\t\t\t\t\t\t\t\t\t - Expected: 1' );
System.debug('\tProblem 1 - \t\tAnswer: ' + ApexP0Exercises.nFibonacci(10) + '\t\t\t\t\t\t\t\t\t - Expected: 55' );


//Problem 2 - Test Cases

System.debug('\tProblem 2 - \t\tAnswer: ' + ApexP0Exercises.sortArray(new List<Integer>{2,4,5,1,3,1}) + '\t - Expected: (1, 1, 2, 3, 4, 5)' );
System.debug('\tProblem 2 - \t\tAnswer: ' + ApexP0Exercises.sortArray(new List<Integer>{5,4,3,2,1}) + '\t\t\t - Expected: (1, 2, 3, 4, 5)' );


//Problem 3 - Test Cases

System.debug('\tProblem 3 - \t\tAnswer: ' + ApexP0Exercises.nFactorial(0) + '\t\t\t\t\t\t\t\t\t\t - Expected: 1');
System.debug('\tProblem 3 - \t\tAnswer: ' + ApexP0Exercises.nFactorial(1) + '\t\t\t\t\t\t\t\t\t\t - Expected: 1');
System.debug('\tProblem 3 - \t\tAnswer: ' + ApexP0Exercises.nFactorial(3) + '\t\t\t\t\t\t\t\t\t\t - Expected: 6');


//Problem 4 - Test Cases

System.debug('\tProblem 4 - \t\tAnswer: ' + ApexP0Exercises.rotateLeftNTimes(new List<Integer>{1,2,3,4,5},1) + '\t\t\t - Expected: (2, 3, 4, 5, 1)');
System.debug('\tProblem 4 - \t\tAnswer: ' + ApexP0Exercises.rotateLeftNTimes(new List<Integer>{1,2,3,4,5},6) + '\t\t\t - Expected: (2, 3, 4, 5, 1)');
System.debug('\tProblem 4 - \t\tAnswer: ' + ApexP0Exercises.rotateLeftNTimes(new List<Integer>{1,2,3,4,5},3) + '\t\t\t - Expected: (4, 5, 1, 2, 3)');


//Problem 5 - Test Cases

System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced('()') + '\t\t\t\t\t\t\t\t - Expected: true');
System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced('()()') + '\t\t\t\t\t\t\t\t - Expected: true');
System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced('(())') + '\t\t\t\t\t\t\t\t - Expected: true');
System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced('({[]})') + '\t\t\t\t\t\t\t\t - Expected: true');
System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced('(') + '\t\t\t\t\t\t\t\t - Expected: false');
System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced(')') + '\t\t\t\t\t\t\t\t - Expected: false');
System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced('(()') + '\t\t\t\t\t\t\t\t - Expected: false');
System.debug('\tProblem 5 - \t\tAnswer: ' + ApexP0Exercises.bracketsAreBalanced('([)]') + '\t\t\t\t\t\t\t\t - Expected: false');


//Problem 6 - Update Accounts

ApexP0Exercises.updateAccountSize();


//Problem 7 - Update CA Leads

ApexP0Exercises.updateCALeads();


//Problem 8 - Close Expired Opportunities (Lost)

ApexP0Exercises.closePastDueOpportunities();